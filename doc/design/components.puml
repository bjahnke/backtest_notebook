@startuml
allowmixing

title Trading System Component Diagram

package "API Gateway" {
  interface APIGateway {
    port "HTTP:80"
    port "HTTPS:443"
  }
}

package "Historical Price Service" {
  component HistoricalPricesDatabase
  component HistoricalPriceUpdater
  port "PostgreSQL:5432"
  note right of HistoricalPricesDatabase
    Data stored in a SQL database.
    SQL interface exposed for read/write access
  end note
}

package "Trend Analysis Service" {
  component TrendAnalysisDatabase
  component TrendAnalyzer
  port "PostgreSQL:5432"
  note right of TrendAnalysisDatabase
    Data stored in a SQL database.
    SQL interface exposed for read/write access
  end note
}

package "Market Visualizer Service" {
  component VisualizationGenerator
  port "HTTP:80"
}

package "Account Data Service" {
  component AccountDataDatabase
  component AccountDataUpdater
  port "MongoDB:27017"
  note right of AccountDataDatabase
    Data stored in a NoSQL database.
    API exposed for read/write access
  end note
}

package "Order Book Service" {
  component OrderGenerator
  port "HTTP:80"
}

package "Order Executor Service" {
  component BrokerAPI
  component StopLossHandler
  port "HTTPS:443"
}

APIGateway --> HistoricalPricesDatabase
APIGateway --> TrendAnalysisDatabase
APIGateway --> VisualizationGenerator
APIGateway --> AccountDataDatabase
APIGateway --> OrderGenerator
APIGateway --> BrokerAPI
APIGateway --> StopLossHandler

HistoricalPriceUpdater --> HistoricalPricesDatabase
TrendAnalyzer --> HistoricalPricesDatabase
TrendAnalyzer --> TrendAnalysisDatabase
VisualizationGenerator --> TrendAnalysisDatabase
AccountDataUpdater --> AccountDataDatabase
OrderGenerator --> AccountDataDatabase
OrderGenerator --> TrendAnalysisDatabase
OrderExecutorService --> BrokerAPI
OrderExecutorService --> StopLossHandler

note bottom of APIGateway
  Routes requests based on URL and metadata.
  Connection pool created using SQLAlchemy's create_engine method.
end note

@enduml
